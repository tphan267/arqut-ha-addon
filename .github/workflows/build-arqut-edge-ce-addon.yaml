name: Build and Push Arqut Edge CE HA Add-on

on:
  workflow_dispatch:
  push:
    # tags:
    #   - "v*" # Trigger on tags like v0.1.0
    paths:
      - "arqut-edge/**"
      - ".github/workflows/build-arqut-edge-ce-addon.yaml"
  workflow_run:
    workflows: ["Build Arqut Edge CE Application"]
    types:
      - completed

jobs:
  build:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name != 'workflow_run' }}

    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        include:
          - arch: i386
            build_from: ghcr.io/home-assistant/i386-base-debian:bullseye
          - arch: amd64
            build_from: ghcr.io/home-assistant/amd64-base-debian:bullseye
          - arch: armv6
            build_from: ghcr.io/home-assistant/armv7-base-debian:bullseye
          - arch: armv7
            build_from: ghcr.io/home-assistant/armv7-base-debian:bullseye
          - arch: aarch64
            build_from: ghcr.io/home-assistant/aarch64-base-debian:bullseye

    steps:
      - name: Checkout addon code
        uses: actions/checkout@v4

      - name: Get latest run ID of a build-arqut-edge-ce-app.yaml
        id: get_artifact_run_id
        run: |
          WORKFLOW_NAME="build-arqut-edge-ce-app.yaml"
          OWNER="${{ github.repository_owner }}"
          REPO="${{ github.event.repository.name }}"
          TOKEN="${{ secrets.GITHUB_TOKEN }}"

          RUN_ID=$(curl -s -H "Authorization: Bearer $TOKEN" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/$OWNER/$REPO/actions/workflows/$WORKFLOW_NAME/runs?per_page=1" \
            | jq '.workflow_runs[0].id')

          echo "Latest run ID: $RUN_ID"
          echo "RUN_ID=$RUN_ID" >> $GITHUB_ENV

      - name: Download Application Artifacts
        if: ${{ github.event.workflow_run.id || steps.get_artifact_run_id.outputs.RUN_ID }}
        uses: actions/download-artifact@v5
        with:
          # name: arqut-edge-ce-binaries
          path: arqut-edge-ce/app-binaries
          run-id: ${{ github.event.workflow_run.id || steps.get_artifact_run_id.outputs.RUN_ID }}
          github-token: ${{ secrets.APP_REPO_TOKEN }}

      - name: List downloaded app binaries
        run: ls -R arqut-edge-ce/app-binaries

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
          # username: ${{ github.actor }}
          # password: ${{ secrets.APP_REPO_TOKEN }}

      - name: Get Latest Tag
        id: get_tag
        run: |
          # Fetch all tags and get the most recent one
          git fetch --tags
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.1.0")
          echo "Latest tag: $LATEST_TAG"
          echo "tag_name=$LATEST_TAG" >> $GITHUB_OUTPUT

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/arqut-ha-addon
          tags: |
            type=ref,event=tag
            type=sha,prefix={{branch}}-
          labels: |
            org.opencontainers.image.title=Arqut Edge Home Assistant Addon
            org.opencontainers.image.description=Home Assistant addon for Arqut Edge
            org.opencontainers.image.vendor=Arqut

      - name: Build and push HA Addon image
        uses: docker/build-push-action@v4
        with:
          context: ./arqut-edge-ce
          platforms: linux/${{ matrix.arch }}
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/arqut-edge-ce-ha-addon-${{ matrix.arch }}:latest
            ghcr.io/${{ github.repository_owner }}/arqut-edge-ce-ha-addon-${{ matrix.arch }}:${{ steps.get_tag.outputs.tag_name || env.VERSION }}
          # labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BUILD_FROM=${{ matrix.build_from }}
            BINARY_PATH=./app-binaries/${{ matrix.arch }}/arqut-edge-ce
